import { PrismaClient, Role } from '@prisma/client';
import * as bcrypt from 'bcrypt';

const prisma = new PrismaClient();

async function main() {
  // Criar hash das senhas
  const adminPasswordHash = await bcrypt.hash('SenhaAdmin!2024', 10);
  const userPasswordHash = await bcrypt.hash('SenhaUsuario!2024', 10);

  // Criar usuário administrador
  const admin = await prisma.user.upsert({
    where: { email: 'admin@cliente.com' },
    update: {},
    create: {
      name: 'Administrador Padrão',
      email: 'admin@cliente.com',
      password: adminPasswordHash,
      role: Role.ADMIN,
    },
  });

  // Criar usuário comum
  const user = await prisma.user.upsert({
    where: { email: 'usuario@cliente.com' },
    update: {},
    create: {
      name: 'Usuário Padrão',
      email: 'usuario@cliente.com',
      password: userPasswordHash,
      role: Role.USER,
    },
  });

  console.log({ admin, user });
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error(e);
    await prisma.$disconnect();
    process.exit(1);
  });
