"use client";

import { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Switch } from "@/components/ui/switch";
import { useToast } from "@/components/ui/use-toast";

export default function SettingsPage() {
  const { toast } = useToast();
  const [settings, setSettings] = useState({
    organizationName: "Câmara Municipal",
    email: "contato@camara.gov.br",
    notificationsEnabled: true,
    language: "pt-BR",
    timezone: "America/Bahia",
    bidClosingTime: "17:00",
    autoPublishPNCP: true,
  });

  const handleSave = () => {
    toast({
      title: "Configurações salvas",
      description: "As configurações foram atualizadas com sucesso.",
    });
  };

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h1 className="text-3xl font-bold">Configurações</h1>
        <Button onClick={handleSave}>Salvar Alterações</Button>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <Card className="p-6">
          <h2 className="text-xl font-semibold mb-4">Configurações Gerais</h2>
          <div className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="organizationName">Nome da Organização</Label>
              <Input
                id="organizationName"
                value={settings.organizationName}
                onChange={(e) =>
                  setSettings({ ...settings, organizationName: e.target.value })
                }
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="email">Email de Contato</Label>
              <Input
                id="email"
                type="email"
                value={settings.email}
                onChange={(e) =>
                  setSettings({ ...settings, email: e.target.value })
                }
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="language">Idioma</Label>
              <Select
                value={settings.language}
                onValueChange={(value) =>
                  setSettings({ ...settings, language: value })
                }
              >
                <SelectTrigger>
                  <SelectValue placeholder="Selecione o idioma" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="pt-BR">Português (Brasil)</SelectItem>
                  <SelectItem value="en">English</SelectItem>
                  <SelectItem value="es">Español</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div className="space-y-2">
              <Label htmlFor="timezone">Fuso Horário</Label>
              <Select
                value={settings.timezone}
                onValueChange={(value) =>
                  setSettings({ ...settings, timezone: value })
                }
              >
                <SelectTrigger>
                  <SelectValue placeholder="Selecione o fuso horário" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="America/Bahia">Bahia</SelectItem>
                  <SelectItem value="America/Sao_Paulo">São Paulo</SelectItem>
                  <SelectItem value="America/Manaus">Manaus</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>
        </Card>

        <Card className="p-6">
          <h2 className="text-xl font-semibold mb-4">Configurações de Licitação</h2>
          <div className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="bidClosingTime">Horário Padrão de Encerramento</Label>
              <Input
                id="bidClosingTime"
                type="time"
                value={settings.bidClosingTime}
                onChange={(e) =>
                  setSettings({ ...settings, bidClosingTime: e.target.value })
                }
              />
            </div>

            <div className="flex items-center justify-between">
              <Label htmlFor="notifications">Notificações por Email</Label>
              <Switch
                id="notifications"
                checked={settings.notificationsEnabled}
                onCheckedChange={(checked) =>
                  setSettings({ ...settings, notificationsEnabled: checked })
                }
              />
            </div>

            <div className="flex items-center justify-between">
              <Label htmlFor="autoPublishPNCP">Publicação Automática no PNCP</Label>
              <Switch
                id="autoPublishPNCP"
                checked={settings.autoPublishPNCP}
                onCheckedChange={(checked) =>
                  setSettings({ ...settings, autoPublishPNCP: checked })
                }
              />
            </div>
          </div>
        </Card>

        <Card className="p-6">
          <h2 className="text-xl font-semibold mb-4">Integração GOV.BR</h2>
          <div className="space-y-4">
            <div className="space-y-2">
              <Label>Status da Integração</Label>
              <div className="flex items-center space-x-2">
                <div className="h-3 w-3 rounded-full bg-green-500"></div>
                <span>Conectado</span>
              </div>
            </div>

            <div className="space-y-2">
              <Label>Último Sincronismo</Label>
              <p className="text-sm text-gray-500">20/03/2024 15:30:45</p>
            </div>

            <Button variant="outline">Revalidar Credenciais</Button>
          </div>
        </Card>

        <Card className="p-6">
          <h2 className="text-xl font-semibold mb-4">Backup e Dados</h2>
          <div className="space-y-4">
            <div className="space-y-2">
              <Label>Último Backup</Label>
              <p className="text-sm text-gray-500">20/03/2024 00:00:00</p>
            </div>

            <div className="space-y-2">
              <Button variant="outline" className="w-full">
                Fazer Backup Manual
              </Button>
              <Button variant="outline" className="w-full">
                Exportar Dados
              </Button>
            </div>
          </div>
        </Card>
      </div>
    </div>
  );
}